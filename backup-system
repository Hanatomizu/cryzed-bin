#!/usr/bin/env python

import os
import pwd
import re
import shutil
import sys
from datetime import datetime

from plumbum import local
from plumbum.cmd import pacman, awk, tar, sudo

BLACKLIST = (
    re.compile(re.escape('/etc/fonts')),
    re.compile(re.escape('/etc/gconf')),
    re.compile(re.escape('/etc/gtk-2.0')),
    re.compile(re.escape('/opt')),
    re.compile(re.escape('/usr'))
)
OUTPUT_FILE_NAME = 'backup-%s-%s.tar.gz' % (os.uname().nodename, datetime.now().strftime('%Y-%d-%m_%H-%M'))
EXPLICITLY_INSTALLED_PACKAGES_FILE_NAME = 'pacman-explicitly-installed-packages.txt'
SYSTEMD_UNIT_FILES_JSON_FILE_NAME = 'systemd-unit-files.json'


def get_all_file_paths(path):
    for root, dirs, files in os.walk(path):
        for file in files:
            yield os.path.join(root, file)


def get_explicitly_installed_packages():
    return pacman('-Q', '--explicit')


def get_modified_backup_files_paths():
    # https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Listing_changed_backup_files
    return [l for l in (pacman['-Qii'] | awk['/^MODIFIED/ {print $2}'])().splitlines() if l.strip()]


def get_lost_files_paths():
    # https://aur.archlinux.org/packages/lostfiles/
    return [l for l in sudo('lostfiles').splitlines() if l.strip()]


def get_systemd_overrides():
    paths = []
    for target in '/etc/systemd/system', '/etc/systemd/user':
        for item in (i for i in os.listdir(target) if i.endswith('.d')):
            paths.extend(get_all_file_paths(os.path.join(target, item)))

    return paths


def blacklisted(path):
    return any(entry.match(path) for entry in BLACKLIST)


def main():
    if not os.getuid() == 0:
        print('This script must be run as root!', file=sys.stderr)
        return 1

    user = pwd.getpwnam(os.environ['SUDO_USER'])

    # Write list of explicitly installed packages
    path = os.path.join(user.pw_dir, EXPLICITLY_INSTALLED_PACKAGES_FILE_NAME)
    with open(path, 'w') as file:
        file.write(get_explicitly_installed_packages())
    shutil.chown(path, user.pw_uid, user.pw_gid)

    # Write systemd-octor systemd configuration json
    path = os.path.join(user.pw_dir, SYSTEMD_UNIT_FILES_JSON_FILE_NAME)
    local['systemd-octor']('--output', path)
    shutil.chown(path, user.pw_uid, user.pw_gid)

    paths = list(p for p in get_modified_backup_files_paths() if os.path.isfile(p) and not blacklisted(p))
    paths.extend(p for p in get_lost_files_paths() if os.path.isfile(p) and not blacklisted(p))
    paths.extend(p for p in get_systemd_overrides() if not blacklisted(p))
    paths.append('/root')
    paths.append('/home')
    tar('--create', '--auto-compress', '--directory', '/', '--file', OUTPUT_FILE_NAME, *paths, retcode=(0, 1))


if __name__ == '__main__':
    sys.exit(main())
