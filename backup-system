#!/usr/bin/env python

from datetime import datetime
import os
import pwd
import re
import shutil
import sys

from plumbum.cmd import sudo, pacman, awk, tar


BLACKLIST = (
    re.compile(re.escape('/etc/fonts')),
    re.compile(re.escape('/etc/gconf')),
    re.compile(re.escape('/etc/gtk-2.0')),
    re.compile(r'.*\.target\.wants'),
    re.compile(re.escape('/opt')),
    re.compile(re.escape('/usr')),
    # re.compile(r'%s\/.*\.conda' % re.escape(os.environ['LOGNAME']))
)
OUTPUT_PATH = 'backup-%s-%s.tar.gz' % (os.uname().nodename, datetime.now().strftime('%Y-%d-%m_%H-%M'))


def get_modified_backup_files_paths():
    # https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Listing_changed_backup_files
    return [l for l in (pacman['-Qii'] | awk['/^MODIFIED/ {print $2}'])().splitlines() if l.strip()]


def get_lost_files_paths():
    # https://aur.archlinux.org/packages/lostfiles/
    return [l for l in sudo('lostfiles').splitlines() if l.strip()]


def blacklisted(path):
    for entry in BLACKLIST:
        if entry.match(path):
            return True


def main():
    if not os.getuid() == 0:
        print('This script must be run as root!', file=sys.stderr)
        return 1

    paths = list(p for p in get_modified_backup_files_paths() if os.path.isfile(p) and not blacklisted(p))
    paths.extend(p for p in get_lost_files_paths() if os.path.isfile(p) and not blacklisted(p))
    paths.append('/home')
    tar('--create', '--auto-compress', '--directory', '/', '--file', OUTPUT_PATH, *paths)

    sudo_user = os.environ.get('SUDO_USER', None)
    if not sudo_user:
        return

    user = pwd.getpwnam(sudo_user)
    shutil.chown(OUTPUT_PATH, user.pw_uid, user.pw_gid)


if __name__ == '__main__':
    sys.exit(main())
