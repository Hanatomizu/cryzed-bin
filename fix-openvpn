#!/usr/bin/env python

import re
import sys

import systemd.journal
from plumbum import cli
from plumbum.cmd import ip

OPENVPN_SYSLOG_IDENTIFIER_TEMPLATE = 'openvpn@%s'
link_remote_regex = re.compile(r'.+?\s+link\s+remote:\s+\[.+?\](.+)')


def get_default_gateway():
    for line in ip('route').splitlines():
        # Return first default gateway that isn't a TUN device
        if line.startswith('default via') and 'dev tun' not in line:
            return line.split('default via')[1].split(None, 1)[0]


class Application(cli.Application):
    gateway = cli.SwitchAttr(['-g', '--gateway'], help=('Specify the gateway. If not set, the script will attempt to '
                                                        'determine the default gateway'))

    def main(self, configuration):
        gateway = self.gateway or get_default_gateway()
        if not gateway:
            print('Error: Could not determine default gateway:', file=sys.stderr)
            print(ip('route'), file=sys.stderr)
            return 1

        reader = systemd.journal.Reader()
        reader.this_boot()
        reader.add_match(SYSLOG_IDENTIFIER=OPENVPN_SYSLOG_IDENTIFIER_TEMPLATE % configuration)
        while True:
            for entry in reader:
                match = link_remote_regex.match(entry['MESSAGE'])
                if not match:
                    continue

                address = match.group(1).split(':', 1)[0]
                command = ip['route', 'add', address, 'via', gateway]
                print(command)
                command.run(retcode=None)

            reader.wait()


if __name__ == '__main__':
    Application.run()
