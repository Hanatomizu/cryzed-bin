#!/usr/bin/env python

import argparse
import re
import subprocess

import systemd.journal

EXIT_FAILURE = 1

argument_parser = argparse.ArgumentParser()
argument_parser.add_argument(dest='syslog_identifier',
                             help='The syslog identifier of the journal that should be monitored.')
argument_parser.add_argument('gateway', nargs='?', help=('Specify the gateway. If not set, the script will attempt to '
                                                         'determine the default gateway.'))
link_remote_regex = re.compile(r'.+?\s+link\s+remote:\s+\[.+?\](.+)')


def determine_default_gateway():
    try:
        output = subprocess.check_output(('ip', 'route'), universal_newlines=True)
    except subprocess.CalledProcessError as exception:
        return None, exception.output

    for line in output.splitlines():
        # noinspection PyTypeChecker
        if line.startswith('default via'):
            # noinspection PyTypeChecker
            return line.split('default via')[1].split(None, 1)[0], output

    return None, output


def main(arguments):
    gateway = arguments.gateway
    if not gateway:
        gateway, output = determine_default_gateway()
        if not gateway:
            argument_parser.exit(EXIT_FAILURE, 'could not determine default gateway:\n%s\n' % output)

    reader = systemd.journal.Reader()
    reader.this_boot()
    reader.add_match(SYSLOG_IDENTIFIER=arguments.syslog_identifier)
    while True:
        for entry in reader:
            match = link_remote_regex.match(entry['MESSAGE'])
            if not match:
                continue

            address = match.group(1).split(':', 1)[0]
            command = 'ip', 'route', 'add', address, 'via', gateway
            print(' '.join(command))
            subprocess.run(command)

        reader.wait()


if __name__ == '__main__':
    arguments = argument_parser.parse_args()
    main(arguments)
