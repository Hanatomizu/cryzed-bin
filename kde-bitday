#!/usr/bin/env python

import argparse
import os
import shutil
import time
from datetime import datetime

argument_parser = argparse.ArgumentParser()
argument_parser.add_argument('target', help='Path to the KDE Slideshow wallpaper folder')
argument_parser.add_argument('--source', help='Path to a folder containing a BitDay 2 wallpaper set',
                             default=os.getcwd())

WALLPAPERS = {
    '01-Early-Morning.png': {3, 4},
    '02-Mid-Morning.png': {5, 6},
    '03-Late-Morning.png': {7, 8, 9},
    '04-Early-Afternoon.png': {10, 11},
    '05-Mid-Afternoon.png': {12},
    '06-Late-Afternoon.png': {13, 14},
    '07-Early-Evening.png': {15},
    '08-Mid-Evening.png': {16, 17, 18},
    '09-Late-Evening.png': {19, 20},
    '10-Early-Night.png': {21},
    '11-Mid-Night.png': {22},
    '12-Late-Night.png': {23, 0, 1, 2}
}
BITDAY_DOWNLOAD_URL = 'http://danny.care/bitday/download/'


def get_wallpaper_filename(hour):
    for filename, hours in WALLPAPERS.items():
        if hour in hours:
            return filename

    raise ValueError(f'invalid hour {hour!r}')


def change_wallpaper():
    hour = datetime.now().hour

    old_wallpaper_filename = get_wallpaper_filename((hour - 1) % 24)
    wallpaper_filename = get_wallpaper_filename(hour)
    if old_wallpaper_filename == wallpaper_filename:
        return

    wallpaper_path = os.path.join(arguments.source, wallpaper_filename)

    # Clean out left over files from the slideshow directory
    for path in [os.path.join(arguments.target, filename) for filename in os.listdir(arguments.target)]:
        # Avoid any kind of racing conditions between checking for file existence and removing it
        try:
            os.remove(path)
        except FileNotFoundError:
            pass

    shutil.copy(wallpaper_path, arguments.target)


def main():
    # Make sure that everything is set up correctly before running the script
    if not os.path.exists(arguments.target):
        argument_parser.exit(1, f'Slideshow path {arguments.target} could not be found.\n')

    for path in [os.path.join(arguments.source, filename) for filename in WALLPAPERS]:
        if not os.path.exists(path):
            argument_parser.exit(1, f'Wallpaper {path} could not be found, visit {BITDAY_DOWNLOAD_URL}.\n')

    while True:
        change_wallpaper()

        now = datetime.now()
        seconds_to_next_hour = (59 - now.minute) * 60 + 59 - now.second

        # I hate off-by-one errors
        time.sleep(seconds_to_next_hour + 1)


if __name__ == '__main__':
    arguments = argument_parser.parse_args()
    main()
