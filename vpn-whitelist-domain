#!/usr/bin/env python
import socket
import sys

from plumbum import cli
from plumbum.cmd import ip, sudo


def get_default_gateway():
    for line in ip('route').splitlines():
        # Return first default gateway found that isn't a virtual tunnel device
        if line.startswith('default via') and 'dev tun' not in line:
            return line.split('default via')[1].split(None, 1)[0]


class Application(cli.Application):
    remove = cli.Flag(['-r', '--remove'])

    def main(self, domain):
        default_gateway = get_default_gateway()
        if not default_gateway:
            print('Error: Could not determine default gateway:' % (ip('route')), file=sys.stderr)
            print(ip('route'), file=sys.stderr)
            return 1

        for address in set(i[4][0] for i in socket.getaddrinfo(domain, None)):
            if self.remove:
                sudo(ip['route', 'del', address, 'via', default_gateway], retcode=None)
                print('Removed', address, 'from whitelist')
            else:
                sudo(ip['route', 'del', address, 'via', default_gateway], retcode=None)
                command = sudo[ip['route', 'add', address, 'via', default_gateway, 'proto', 'static']]
                exit_code, stdout, stderr = command.run(retcode=None)
                if exit_code != 0:
                    print('Failed to whitelist %s: %s' % (address, stderr.strip()), file=sys.stderr)
                    continue

                print('Added', address, 'to whitelist')


if __name__ == '__main__':
    Application.run()
